{{- $raw := .Values.tourguide.tag | default .Chart.AppVersion -}}
{{- $tag := ternary $raw (printf "v%s" $raw) (hasPrefix "v" $raw) -}}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tourguide
spec:
  selector:
    matchLabels:
      app: tourguide
  template:
    metadata:
      labels:
        app: tourguide
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      tolerations:
        - key: "pool"
          operator: "Equal"
          value: "{{ .Values.cluster.meshPool}}"
          effect: "NoSchedule"
      nodeSelector:
        cloud.google.com/gke-nodepool: {{ .Values.cluster.meshPool}}
      volumes:
        - name: prometheus-data
          emptyDir: {}
      terminationGracePeriodSeconds: 10
      initContainers:
        - name: sysctl-startup
          image: alpine:3.4
          command:
            - /bin/sh
            - -c
            - |
                sysctl -w net.core.somaxconn=32768 > /dev/null 2>&1
                sysctl -w net.ipv4.ip_local_port_range='1024 65535' > /dev/null 2>&1
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          resources:
            requests:
              memory: 10Mi
              cpu: 5m
              ephemeral-storage: 30Mi
      containers:
        - name: tourguide
          image: {{ .Values.cluster.dockerRegistry }}/tourguide:{{ $tag }}
          volumeMounts:
            - name: prometheus-data
              mountPath: /tmp/prometheus_multiproc
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: AUTH_URI
              value: {{ required "A valid .cluster.globalServer is required!".Values.cluster.globalServer }}/auth
            - name: STICKY_AUTH_URL
              value: {{ required "A valid .cluster.globalServer is required!".Values.cluster.globalServer }}/sticky_auth
            - name: AUTH_URL
              value: {{ required "A valid .cluster.globalServer is required!".Values.cluster.globalServer }}/auth
            - name: TOURGUIDE_SERVER_ADDRESS
              value: {{ required "A valid .cluster.globalServer is required!".Values.cluster.globalServer }}
            - name: TOURGUIDE_LOG_LEVEL
              value: {{.Values.logLevel }}
            - name: TOURGUIDE_TMP_DIR
              value: {{ .Values.tourguide.tmpDir | default "/tmp" | quote }}
            - name: TOURGUIDE_TIMEOUT
              value: {{ .Values.tourguide.timeout | default "30s" | quote }}
            - name: PROMETHEUS_MULTIPROC_DIR
              value: /tmp/prometheus_multiproc
          resources:
            requests:
              memory: 750Mi 
              cpu: 280m
              ephemeral-storage: 1500Mi
            limits:
              ephemeral-storage: 2000Mi
          readinessProbe:
            httpGet:
              path: /tourguide/version
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /tourguide/version
              port: 8080
            initialDelaySeconds: 15
            timeoutSeconds: 1
            periodSeconds: 60
        - name: tourguide-metrics
          image: {{ .Values.cluster.dockerRegistry }}/tourguide-metrics:{{ $tag }}
          volumeMounts:
            - name: prometheus-data
              mountPath: /tmp/prometheus_multiproc
          ports:
            - containerPort: 9090
          env:
            - name: PROMETHEUS_MULTIPROC_DIR
              value: /tmp/prometheus_multiproc
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits:
              cpu: 30m
              memory: 80Mi 